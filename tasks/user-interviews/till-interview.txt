# User Interview: Till
**Date:** 2025-10-20
**Interviewer:** Hendrik Hemken
**Context:** Product-Toolkit / Claude Code Demo

---

## 👤 Interviewee Profile

**Name:** Till
**Role:** Head of Product
**Company Type:** Scale-Up
**Industry:** Digital IDs / Identity Verification
**Company Stage:** Scale-Up (techie environment)

---

## 🎯 Interview Context

**Topic:** Claude Code Demo & Product-Toolkit Capabilities
**Format:** Demo-based conversation
**Focus:** Showing what's possible with Claude Code

---

## 💡 Key Insights

### What Till Found Exciting

**1. Jira Integration (🔥 Top Interest)**
- Tickets bearbeiten & raussuchen automatisch
- Kommentare sortieren & beantworten
- "Verbringt viel Zeit mit Kommentaren" (Pain Point!)
- Übertragen von Confluence PRDs → Jira Tickets
- Automatisches Anlegen von Confluence PRDs

**2. Prototyping mit Claude Code**
- Einfache Click-Dummy-Prototypen bauen
- Mit Mock-Data arbeiten
- Prototypen launchen & hosten
- Schnelle Iteration möglich

**3. Datenanalyse / Dashboards**
- Einfache Dashboards mit Claude Code bauen
- SQL-Datenbanken anbinden
- Claude Code führt Datenbanken zusammen (Joins)
- **Wichtig:** Claude erklärt was er gemacht hat (nachvollziehbar!)
- Transparency in SQL-Befehlen gewünscht

**4. MCP-Server über Docker**
- Fand das Setup super
- Integration gefällt ihm

---

## 🚨 Pain Points Identified

### Jira-Prozess Pain Points (🔥 Biggest Pain)
- Viel Zeit mit Kommentare sortieren & beantworten
- Übertragen von Confluence → Jira (manual work)
- Ticket-Management overhead

### Confluence Pain Points
- PRDs manuell anlegen
- PRDs in Tickets übertragen (duplicate work)

### Prototyping
- Click-Dummies manuell bauen (vermutlich Figma?)
- Keine schnelle Mock-Data Integration

### Datenanalyse
- Dashboards manuell bauen?
- SQL-Abfragen nicht transparent genug?

---

## 🎬 Use Cases He Sees

**Primary Use Cases (Will Actually Do):**
1. Stories bauen & Epics runterbrechen
2. PRDs übertragen (Confluence → Jira)
3. Jira-Kommentare rausziehen & weiterarbeiten
4. Confluence PRDs automatisch anlegen

**Secondary Use Cases (Interest, Maybe Later):**
1. Prototyping mit Claude Code
2. Datenanalyse / Dashboards

**NOT a Use Case (Due to Constraints):**
- Development mit Claude Code → zu sensible Daten!
- Wird wahrscheinlich NICHT für Developer eingesetzt
- Nur für Product Management Work

---

## 🔍 Behavioral Observations

**Current Workflows:**
- Arbeitet viel in Jira (Kommentare, Tickets, Sortieren)
- Nutzt Confluence für PRDs
- Manuelle Übertragung Confluence → Jira
- Prototyping vermutlich mit Click-Dummy-Tools

**AI-Tool Adoption:**
- Sehr techie → schnell überzeugt von Claude Code
- Hat sofort die Möglichkeiten gesehen
- Aktiv überlegt wie er es einsetzen kann
- "Mega cool" (Exact Quote)

**Decision-Making:**
- Möchte CTO involvieren (smart move!)
- Plant "Was kriegen wir in einer Stunde hin?" Session
- Pragmatisch: Sensible Daten → kein Dev-Einsatz
- Fokus auf Product Work zuerst

---

## 🚀 Next Steps / Follow-Up

**Concrete Next Steps:**
1. ✅ Möchte Hendrik mit seinem CTO zusammenbringen
2. ✅ Zu dritt zusammensetzen
3. ✅ "Was kriegen wir in einer Stunde hin?" Session planen

**Potential Engagement:**
- Workshop mit Till + CTO
- Focus: Jira-Integration, PRDs, Epics Breakdown
- Show concrete value in 1 hour

---

## 📊 Quotes (Paraphrased)

- "Jira-Integration fand ich irre gut!"
- "Verbringt viel Zeit mit dem Sortieren von Comments"
- "MCP-Server über Docker finde ich super"
- "Fand es mega cool"
- "Überlegt wie er mich mit seinem CTO zusammenbringt"

---

## 🎯 Strategic Implications

**Product-Toolkit Focus Areas Validated:**
1. ✅ Jira-Integration (TOP Priority for Scale-Ups!)
2. ✅ Epics → User Stories Breakdown
3. ✅ PRD Creation & Management
4. ✅ Prototyping Capabilities

**New Opportunities Identified:**
1. 🆕 Confluence → Jira Integration (Pain Point!)
2. 🆕 Jira Comment Management (Time Sink!)
3. 🆕 SQL Dashboards with Transparency (Explainability!)
4. 🆕 Prototyping with Mock-Data & Hosting

**Market Segment Insights:**
- Scale-Ups mit sensiblen Daten: PM-Tool-Einsatz > Dev-Einsatz
- Head of Product als Buyer Persona bestätigt
- CTO Buy-In wichtig (Technical Decision Maker)

---

## 💭 Interviewer Notes

**What Worked Well:**
- Demo-first approach überzeugt sofort
- Konkrete Use Cases gezeigt
- Docker/MCP Setup beeindruckt

**What to Follow Up:**
- Wie sieht sein aktueller Jira-Workflow genau aus?
- Welche Tools nutzt er für Prototyping?
- Wie groß ist sein Product Team?
- Wie viele Jira-Kommentare pro Tag/Woche?

**Open Questions:**
- [User hat angefangen: "es könnte auch was sein..." - nicht zu Ende gesprochen]

---

**Interview Type:** Demo-based, Use Case Discovery
**Quality:** High (concrete pain points, clear use cases, next steps defined)
**Follow-Up Priority:** 🔥 High (CTO Meeting geplant!)

---

---

## 🧠 Strategic Reflection (Post-Interview)

**Meta-Learnings Beyond This Interview:**

**1. Product-Market Fit Signal 🎯**
- Claude Code ist definitiv das richtige Tool für Product Work
- Die Begeisterung bei Product Managern ist "irre" (Exact Quote)
- Nicht nur Till → Pattern across multiple PMs
- → **Validation: Claude Code for PM = right direction**

**2. Workshop Opportunity 💼**
- Till erwägt KI-Workshop oder Claude Code Workshop
- Möchte evtl. weitere Teilnehmer finden
- → **New Format: Claude Code Workshops for PM Teams**

**3. Go-To-Market Strategy Validated ✅**
- LinkedIn Content → funktioniert
- 1:1 Interviews → bringen konkrete Leads
- Demo-first → überzeugt sofort
- → **Keep doing: LinkedIn + 1:1s + Demos**

**4. New Format Idea 🆕**
- Montag/Dienstag, 17 Uhr: 1 Stunde Claude Code Session
- Mit Interviewees / Interessenten
- Regelmäßiger Slot → Skalierbar
- → **Test: Weekly Demo Slots**

**5. Content Strategy 📝**
- Weiterhin Wissen auf LinkedIn teilen
- Leuten Möglichkeit geben mit Hendrik in Kontakt zu treten
- Claude Code zeigen, nicht nur darüber reden
- → **Show, don't tell**

**Key Insight:**
> "Claude Code ist insgesamt das richtige Tool, um die Produktarbeit zu leisten und zu verbessern. Die Begeisterung, die das auslöst bei den Produktmanagern, denen ich das zeige, ist irre und verdammt cool."

**Next Steps:**
1. ✅ LinkedIn Content weiter produzieren
2. 🆕 Weekly Demo Slots testen (Mo/Di 17 Uhr)
3. 🆕 Workshop-Format entwickeln
4. ✅ Mehr 1:1 Interviews führen (10 days goal)

---

*Documented by: Hendrik Hemken*
*Product-Toolkit User Interviews*
